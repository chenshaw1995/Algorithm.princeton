import java.util.Arrays;

public class BruteCollinearPoints {
 private static LineSegment[] lineS;
 private int num;
 
   public BruteCollinearPoints(Point[] points) {
	if(points==null)throw new IllegalArgumentException();
	for(Point p: points){
		if(p==null)throw new IllegalArgumentException();;
	}
    // finds all line segments containing 4 points
	Arrays.sort(points);
	int N=points.length;
    for(int i=0;i<N-1;i++){
    	if(points[i].compareTo(points[i+1])==0)throw new IllegalArgumentException();
    }
    Point p;
    num=0;
    lineS=new LineSegment[N];
    for(int i = 0; i < N; i++) {
     p = points[i];
     for(int m=i+1;m<N;m++){
    	 for(int n=m+1;n<N;n++){
    		 for(int o=n+1;o<N;o++){
    			 if(p.slopeTo(points[m])==p.slopeTo(points[n])&&p.slopeTo(points[m])==p.slopeTo(points[o])){
    		         lineS[num++]=new LineSegment(p,points[o]);//p,m,n,o 
    		         if(num==lineS.length-1)
    		         {
    		        	 LineSegment[] tempLines=new LineSegment[2*lineS.length];
    		        	 for(int k=0;k<lineS.length;k++){
    		        		 tempLines[k]=lineS[k];
    		        	 }
    		        	 lineS=tempLines;
    		         }
    		      }
    		      else{}
    		 }
    	 }
     }
    }//outer for loopx
    ;
   }
   public           int numberOfSegments()  {      // the number of line segments
    return num;
   }
   public LineSegment[] segments()  {              // the line segments
	int i=0;
	LineSegment[] line=new LineSegment[num];
	while(lineS[i]!=null&&i<num){
		line[i]=lineS[i];
		i++;
	}
	lineS=line;
    return lineS;
    
    
   }
}
